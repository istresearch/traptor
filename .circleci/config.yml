version: 2
jobs:
  build:
    docker:
      - image: docker:18.03.0
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build 
          command: |
            apk add --update python openssh git
            IMAGE_BASE=istresearch/traptor
            DOCKER_CI_IMAGE_TAG="${IMAGE_BASE}:ci-develop"
            BRANCH=${CIRCLE_BRANCH#*/}
            VERSION=`python traptor/version.py`
            if [[ ! -z $CIRCLE_TAG ]]; then
              VERSION_TAG="${VERSION}"
            elif [[ $BRANCH == develop ]]; then
              VERSION_TAG="${VERSION}-dev"
            else
              VERSION_TAG="ci-${VERSION}-${BRANCH}"
            fi
            DOCKER_IMAGE_TAG="${IMAGE_BASE}:${VERSION_TAG}"
            docker build -t $DOCKER_CI_IMAGE_TAG -t $DOCKER_IMAGE_TAG -f Dockerfile .
            docker run $DOCKER_CI_IMAGE_TAG bash -c 'python -m pytest -vv tests/test_traptor_offline.py'
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKER_CI_IMAGE_TAG
            docker push $DOCKER_IMAGE_TAG

  deploy:
    docker:
      - image: istresearch/tmp:python-ansible-3.0.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run Ansible
          command: |
            BRANCH=${CIRCLE_BRANCH#*/}

            if [[ $BRANCH == "develop" ]]; then

              ssh-keyscan -H $ANSIBLE_EXECUTOR_HOST >> ~/.ssh/known_hosts
              chmod 600 ~/.ssh/known_hosts

              git clone -b $BRANCH git@github.com:istresearch/ansible-symphony-ist.git
              cd ansible-symphony-ist

              echo $ANSIBLE_VAULT_KEY >> vault.passwd
              sed -i 's/control_path/#control_path/g' ansible.cfg
              echo "ansible_ssh_common_args: '-o ProxyCommand=\"ssh -W %h:%p -q $ANSIBLE_EXECUTOR_USER@$ANSIBLE_EXECUTOR_HOST\"'" >> group_vars/develop/vars

              command="ansible-playbook -u $ANSIBLE_EXECUTOR_USER -i develop.inventory -t site-docker-traptor-all -l docker-traptor-nodes site-docker-infrastructure.yml"
              echo "running:" $command
              bash -c "$command"
            else
              echo "Skipping Ansible deployment"
            fi

workflows:
  version: 2
  pipeline:
    jobs:
      - build:
          context: globalconfig
          filters:
            tags:
              ignore: /^test-.*/
      - deploy:
          requires:
            - build
          context: globalconfig
          filters:
            tags:
              ignore: /^test-.*/